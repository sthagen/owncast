"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[7590],{53482:function(e,t,r){r.r(t),r.d(t,{erlang:function(){return h}});var n=["-type","-spec","-export_type","-opaque"],i=["after","begin","catch","case","cond","end","fun","if","let","of","query","receive","try","when"],a=/[\->,;]/,o=["->",";",","],s=["and","andalso","band","bnot","bor","bsl","bsr","bxor","div","not","or","orelse","rem","xor"],u=/[\+\-\*\/<>=\|:!]/,c=["=","+","-","*","/",">",">=","<","=<","=:=","==","=/=","/=","||","<-","!"],l=/[<\(\[\{]/,_=["<<","(","[","{"],m=/[>\)\]\}]/,f=["}","]",")",">>"],p=["is_atom","is_binary","is_bitstring","is_boolean","is_float","is_function","is_integer","is_list","is_number","is_pid","is_port","is_record","is_reference","is_tuple","atom","binary","bitstring","boolean","function","integer","list","number","pid","port","record","reference","tuple"],k=["abs","adler32","adler32_combine","alive","apply","atom_to_binary","atom_to_list","binary_to_atom","binary_to_existing_atom","binary_to_list","binary_to_term","bit_size","bitstring_to_list","byte_size","check_process_code","contact_binary","crc32","crc32_combine","date","decode_packet","delete_module","disconnect_node","element","erase","exit","float","float_to_list","garbage_collect","get","get_keys","group_leader","halt","hd","integer_to_list","internal_bif","iolist_size","iolist_to_binary","is_alive","is_atom","is_binary","is_bitstring","is_boolean","is_float","is_function","is_integer","is_list","is_number","is_pid","is_port","is_process_alive","is_record","is_reference","is_tuple","length","link","list_to_atom","list_to_binary","list_to_bitstring","list_to_existing_atom","list_to_float","list_to_integer","list_to_pid","list_to_tuple","load_module","make_ref","module_loaded","monitor_node","node","node_link","node_unlink","nodes","notalive","now","open_port","pid_to_list","port_close","port_command","port_connect","port_control","pre_loaded","process_flag","process_info","processes","purge_module","put","register","registered","round","self","setelement","size","spawn","spawn_link","spawn_monitor","spawn_opt","split_binary","statistics","term_to_binary","time","throw","tl","trunc","tuple_size","tuple_to_list","unlink","unregister","whereis"],b=/[\w@Ø-ÞÀ-Öß-öø-ÿ]/,g=/[0-7]{1,3}|[bdefnrstv\\"']|\^[a-zA-Z]|x[0-9a-zA-Z]{2}|x{[0-9a-zA-Z]+}/;function nongreedy(e,t,r){if(1==e.current().length&&t.test(e.current())){for(e.backUp(1);t.test(e.peek());)if(e.next(),is_member(e.current(),r))return!0;e.backUp(e.current().length-1)}return!1}function greedy(e,t,r){if(1==e.current().length&&t.test(e.current())){for(;t.test(e.peek());)e.next();for(;0<e.current().length;){if(is_member(e.current(),r))return!0;e.backUp(1)}e.next()}return!1}function doubleQuote(e){return quote(e,'"',"\\")}function singleQuote(e){return quote(e,"'","\\")}function quote(e,t,r){for(;!e.eol();){var n=e.next();if(n==t)return!0;n==r&&e.next()}return!1}function is_member(e,t){return -1<t.indexOf(e)}function rval(e,t,r){var n,i,a;switch("comment"==(n=aToken(t.current(),t.column(),t.indentation(),r)).type||"whitespace"==n.type||(e.tokenStack=(0<(a=(i=e.tokenStack).length-1)&&"record"===i[a].type&&"dot"===n.type?i.pop():(0<a&&"group"===i[a].type&&i.pop(),i.push(n)),i),e.tokenStack=function(e){if(!e.length)return e;var t=e.length-1;if("dot"===e[t].type)return[];if(t>1&&"fun"===e[t].type&&"fun"===e[t-1].token)return e.slice(0,t-1);switch(e[t].token){case"}":return d(e,{g:["{"]});case"]":return d(e,{i:["["]});case")":return d(e,{i:["("]});case">>":return d(e,{i:["<<"]});case"end":return d(e,{i:["begin","case","fun","if","receive","try"]});case",":return d(e,{e:["begin","try","when","->",",","(","[","{","<<"]});case"->":return d(e,{r:["when"],m:["try","if","case","receive"]});case";":return d(e,{E:["case","fun","if","receive","try","when"]});case"catch":return d(e,{e:["try"]});case"of":return d(e,{e:["case"]});case"after":return d(e,{e:["receive","try"]});default:return e}}(e.tokenStack)),r){case"atom":case"boolean":return"atom";case"attribute":return"attribute";case"builtin":return"builtin";case"close_paren":case"colon":case"dot":case"open_paren":case"separator":default:return null;case"comment":return"comment";case"error":return"error";case"fun":return"meta";case"function":return"tag";case"guard":return"property";case"keyword":return"keyword";case"macro":return"macroName";case"number":return"number";case"operator":return"operator";case"record":return"bracket";case"string":return"string";case"type":return"def";case"variable":return"variable"}}function aToken(e,t,r,n){return{token:e,column:t,indent:r,type:n}}function peekToken(e,t){var r=e.tokenStack.length,n=t||1;return!(r<n)&&e.tokenStack[r-n]}function d(e,t){for(var r in t)for(var n=e.length-1,i=t[r],a=n-1;-1<a;a--)if(is_member(e[a].token,i)){var o,s=e.slice(0,a);switch(r){case"m":return s.concat(e[a]).concat(e[n]);case"r":return s.concat(e[n]);case"i":return s;case"g":return s.concat(aToken(o="group",0,0,o));case"E":case"e":return s.concat(e[a])}}return"E"==r?[]:e}function getToken(e,t){var r=e.tokenStack,n=getTokenIndex(r,"token",t);return!!truthy(r[n])&&r[n]}function getTokenIndex(e,t,r){for(var n=e.length-1;-1<n;n--)if(is_member(e[n][t],r))return n;return!1}function truthy(e){return!1!==e&&null!=e}let h={name:"erlang",startState:()=>({tokenStack:[],in_string:!1,in_atom:!1}),token:function(e,t){if(t.in_string)return t.in_string=!doubleQuote(e),rval(t,e,"string");if(t.in_atom)return t.in_atom=!singleQuote(e),rval(t,e,"atom");if(e.eatSpace())return rval(t,e,"whitespace");if(!peekToken(t)&&e.match(/-\s*[a-zß-öø-ÿ][\wØ-ÞÀ-Öß-öø-ÿ]*/))return is_member(e.current(),n)?rval(t,e,"type"):rval(t,e,"attribute");var r=e.next();if("%"==r)return e.skipToEnd(),rval(t,e,"comment");if(":"==r)return rval(t,e,"colon");if("?"==r)return e.eatSpace(),e.eatWhile(b),rval(t,e,"macro");if("#"==r)return e.eatSpace(),e.eatWhile(b),rval(t,e,"record");if("$"==r)return"\\"!=e.next()||e.match(g)?rval(t,e,"number"):rval(t,e,"error");if("."==r)return rval(t,e,"dot");if("'"==r){if(!(t.in_atom=!singleQuote(e))){if(e.match(/\s*\/\s*[0-9]/,!1))return e.match(/\s*\/\s*[0-9]/,!0),rval(t,e,"fun");if(e.match(/\s*\(/,!1)||e.match(/\s*:/,!1))return rval(t,e,"function")}return rval(t,e,"atom")}if('"'==r)return t.in_string=!doubleQuote(e),rval(t,e,"string");if(/[A-Z_Ø-ÞÀ-Ö]/.test(r))return e.eatWhile(b),rval(t,e,"variable");if(/[a-z_ß-öø-ÿ]/.test(r)){if(e.eatWhile(b),e.match(/\s*\/\s*[0-9]/,!1))return e.match(/\s*\/\s*[0-9]/,!0),rval(t,e,"fun");var h,v=e.current();return is_member(v,i)?rval(t,e,"keyword"):is_member(v,s)?rval(t,e,"operator"):e.match(/\s*\(/,!1)?is_member(v,k)&&(":"!=peekToken(t).token||"erlang"==peekToken(t,2).token)?rval(t,e,"builtin"):is_member(v,p)?rval(t,e,"guard"):rval(t,e,"function"):":"==((h=e.match(/^\s*([^\s%])/,!1))?h[1]:"")?"erlang"==v?rval(t,e,"builtin"):rval(t,e,"function"):is_member(v,["true","false"])?rval(t,e,"boolean"):rval(t,e,"atom")}var y=/[0-9]/;return y.test(r)?(e.eatWhile(y),e.eat("#")?e.eatWhile(/[0-9a-zA-Z]/)||e.backUp(1):e.eat(".")&&(e.eatWhile(y)?!e.eat(/[eE]/)||(e.eat(/[-+]/)?e.eatWhile(y)||e.backUp(2):e.eatWhile(y)||e.backUp(1)):e.backUp(1)),rval(t,e,"number")):nongreedy(e,l,_)?rval(t,e,"open_paren"):nongreedy(e,m,f)?rval(t,e,"close_paren"):greedy(e,a,o)?rval(t,e,"separator"):greedy(e,u,c)?rval(t,e,"operator"):rval(t,e,null)},indent:function(e,t,r){var n,i,a,o,s,u,c,l=truthy(u=t.match(/,|[a-z]+|\}|\]|\)|>>|\|+|\(/))&&0===u.index?u[0]:"",m=peekToken(e,1),p=peekToken(e,2);if(e.in_string||e.in_atom)return null;if(!p)return 0;if("when"==m.token)return m.column+r.unit;if("when"===l&&"function"===p.type)return p.indent+r.unit;if("("===l&&"fun"===m.token)return m.column+3;if("catch"===l&&(c=getToken(e,["try"])))return c.column;if(is_member(l,["end","after","of"]))return(c=getToken(e,["begin","case","fun","if","receive","try"]))?c.column:null;else if(is_member(l,f))return(c=getToken(e,_))?c.column:null;else if(is_member(m.token,[",","|","||"])||is_member(l,[",","|","||"]))return(i=getTokenIndex(n=e.tokenStack.slice(0,-1),"type",["open_paren"]),c=!!truthy(n[i])&&n[i])?c.column+c.token.length:r.unit;else return"->"==m.token?is_member(p.token,["receive","case","if","try"])?p.column+r.unit+r.unit:p.column+r.unit:is_member(m.token,_)?m.column+m.token.length:truthy((o=getTokenIndex(a=e.tokenStack,"type",["open_paren","separator","keyword"]),s=getTokenIndex(a,"type",["operator"]),c=truthy(o)&&truthy(s)&&o<s?a[o+1]:!!truthy(o)&&a[o]))?c.column+r.unit:0},languageData:{commentTokens:{line:"%"}}}}}]);